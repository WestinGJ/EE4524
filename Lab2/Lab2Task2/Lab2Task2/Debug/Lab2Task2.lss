
Lab2Task2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  0000031c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002c8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000034c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000390  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002a65  00000000  00000000  000003f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002474  00000000  00000000  00002e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000615  00000000  00000000  000052d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000008c  00000000  00000000  000058e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001297  00000000  00000000  00005974  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000160  00000000  00000000  00006c0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00006d6b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__ctors_end>
   4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  54:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  58:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  5c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  60:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  64:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  68:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  6c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  70:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  74:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  78:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  7c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  80:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  84:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  88:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  8c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  90:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  94:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  98:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  9c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf ef       	ldi	r28, 0xFF	; 255
  a6:	cd bf       	out	0x3d, r28	; 61
  a8:	df e3       	ldi	r29, 0x3F	; 63
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	0e 94 3f 01 	call	0x27e	; 0x27e <main>
  b0:	0c 94 62 01 	jmp	0x2c4	; 0x2c4 <_exit>

000000b4 <__bad_interrupt>:
  b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <CLOCK_init>:
void move_LEDS(void);

void CLOCK_init (void)
{
	/* Disable CLK_PER Prescaler */
	ccp_write_io( (void *) &CLKCTRL.MCLKCTRLB , (0 << CLKCTRL_PEN_bp));
  b8:	60 e0       	ldi	r22, 0x00	; 0
  ba:	81 e6       	ldi	r24, 0x61	; 97
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <ccp_write_io>
  c2:	08 95       	ret

000000c4 <PORTS_init>:
}

void PORTS_init(void)
{
	/* set UNO D0-D7 to all outputs  */
	PORTC.DIR = 0b01110000; /* or 0x70;			PC4-UNO D1 (TXD1), PC5-UNO D0 (RXD1), PC6 - UNO D4  */
  c4:	80 e7       	ldi	r24, 0x70	; 112
  c6:	80 93 40 04 	sts	0x0440, r24	; 0x800440 <__TEXT_REGION_LENGTH__+0x7f4440>
	PORTA.DIR = 0b00000011; /* or 0x03;			PA1-UNO D7, PA0 - UNO D2 */
  ca:	83 e0       	ldi	r24, 0x03	; 3
  cc:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <__TEXT_REGION_LENGTH__+0x7f4400>
	PORTB.DIR = 0b00000100; /* or 0x04;			PB2 - UNO D5 */
  d0:	84 e0       	ldi	r24, 0x04	; 4
  d2:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <__TEXT_REGION_LENGTH__+0x7f4420>
	PORTF.DIR = 0b00110000; /* or 0x30;			PF5 - UNO D3, PF4 UNO D6 */
  d6:	80 e3       	ldi	r24, 0x30	; 48
  d8:	80 93 a0 04 	sts	0x04A0, r24	; 0x8004a0 <__TEXT_REGION_LENGTH__+0x7f44a0>
  dc:	08 95       	ret

000000de <ClearPorts>:
		move_LEDS();
	}
	return 1;
}

void ClearPorts() {
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29

	PORTC.OUTCLR = 1<<5;  /* or 0x20;		D0 <- 0 */
  e2:	e0 e4       	ldi	r30, 0x40	; 64
  e4:	f4 e0       	ldi	r31, 0x04	; 4
  e6:	90 e2       	ldi	r25, 0x20	; 32
  e8:	96 83       	std	Z+6, r25	; 0x06
	PORTC.OUTCLR = 1<<4;  /* or 0x10;		D1 <- 0 */
  ea:	80 e1       	ldi	r24, 0x10	; 16
  ec:	86 83       	std	Z+6, r24	; 0x06
	PORTA.OUTCLR = 1<<0;  /* or 0x01;		D2 <- 0 */
  ee:	a0 e0       	ldi	r26, 0x00	; 0
  f0:	b4 e0       	ldi	r27, 0x04	; 4
  f2:	21 e0       	ldi	r18, 0x01	; 1
  f4:	16 96       	adiw	r26, 0x06	; 6
  f6:	2c 93       	st	X, r18
  f8:	16 97       	sbiw	r26, 0x06	; 6
	PORTF.OUTCLR = 1<<5;  /* or 0x20;		D3 <- 0 */
  fa:	c0 ea       	ldi	r28, 0xA0	; 160
  fc:	d4 e0       	ldi	r29, 0x04	; 4
  fe:	9e 83       	std	Y+6, r25	; 0x06
	PORTC.OUTCLR = 1<<6;  /* or 0x40;		D4 <- 0 */
 100:	90 e4       	ldi	r25, 0x40	; 64
 102:	96 83       	std	Z+6, r25	; 0x06
	PORTB.OUTCLR = 1<<2;  /* or 0x04;		D5 <- 0 */
 104:	94 e0       	ldi	r25, 0x04	; 4
 106:	90 93 26 04 	sts	0x0426, r25	; 0x800426 <__TEXT_REGION_LENGTH__+0x7f4426>
	PORTF.OUTCLR = 1<<4;  /* or 0x10;		D6 <- 0 */
 10a:	8e 83       	std	Y+6, r24	; 0x06
	PORTA.OUTCLR = 1<<1;  /* or 0x02;		D7 <- 0 */
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	16 96       	adiw	r26, 0x06	; 6
 110:	8c 93       	st	X, r24
}
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	08 95       	ret

00000118 <SetPorts>:

void SetPorts() {
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
	
	PORTC.OUTSET = 1<<5;  /* or 0x20;		D0 <- 1 */
 11c:	e0 e4       	ldi	r30, 0x40	; 64
 11e:	f4 e0       	ldi	r31, 0x04	; 4
 120:	90 e2       	ldi	r25, 0x20	; 32
 122:	95 83       	std	Z+5, r25	; 0x05
	PORTC.OUTSET = 1<<4;  /* or 0x10;		D1 <- 1 */
 124:	80 e1       	ldi	r24, 0x10	; 16
 126:	85 83       	std	Z+5, r24	; 0x05
	PORTA.OUTSET = 1<<0;  /* or 0x01;		D2 <- 1 */
 128:	a0 e0       	ldi	r26, 0x00	; 0
 12a:	b4 e0       	ldi	r27, 0x04	; 4
 12c:	21 e0       	ldi	r18, 0x01	; 1
 12e:	15 96       	adiw	r26, 0x05	; 5
 130:	2c 93       	st	X, r18
 132:	15 97       	sbiw	r26, 0x05	; 5
	PORTF.OUTSET = 1<<5;  /* or 0x20;		D3 <- 1 */
 134:	c0 ea       	ldi	r28, 0xA0	; 160
 136:	d4 e0       	ldi	r29, 0x04	; 4
 138:	9d 83       	std	Y+5, r25	; 0x05
	PORTC.OUTSET = 1<<6;  /* or 0x40;		D4 <- 1 */
 13a:	90 e4       	ldi	r25, 0x40	; 64
 13c:	95 83       	std	Z+5, r25	; 0x05
	PORTB.OUTSET = 1<<2;  /* or 0x04;		D5 <- 1 */
 13e:	94 e0       	ldi	r25, 0x04	; 4
 140:	90 93 25 04 	sts	0x0425, r25	; 0x800425 <__TEXT_REGION_LENGTH__+0x7f4425>
	PORTF.OUTSET = 1<<4;  /* or 0x10;		D6 <- 1 */
 144:	8d 83       	std	Y+5, r24	; 0x05
	PORTA.OUTSET = 1<<1;  /* or 0x02;		D7 <- 1 */
 146:	82 e0       	ldi	r24, 0x02	; 2
 148:	15 96       	adiw	r26, 0x05	; 5
 14a:	8c 93       	st	X, r24
}
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	08 95       	ret

00000152 <move_LEDS>:

void move_LEDS(void)
{
	uint8_t i = 0;
	
	for (i=0; i < 7; i += 1)
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	46 c0       	rjmp	.+140    	; 0x1e2 <move_LEDS+0x90>
	{
		if (i == 0) {
 156:	81 11       	cpse	r24, r1
 158:	07 c0       	rjmp	.+14     	; 0x168 <move_LEDS+0x16>
			PORTC.OUTCLR = 1<<4;  /* or 0x10;		D1 <- 0 */
 15a:	e0 e4       	ldi	r30, 0x40	; 64
 15c:	f4 e0       	ldi	r31, 0x04	; 4
 15e:	90 e1       	ldi	r25, 0x10	; 16
 160:	96 83       	std	Z+6, r25	; 0x06
			PORTC.OUTSET = 1<<5;  /* or 0x20;		D0 <- 1 */
 162:	90 e2       	ldi	r25, 0x20	; 32
 164:	95 83       	std	Z+5, r25	; 0x05
 166:	33 c0       	rjmp	.+102    	; 0x1ce <move_LEDS+0x7c>
		}
		else if (i == 1) {
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	39 f4       	brne	.+14     	; 0x17a <move_LEDS+0x28>
			PORTC.OUTCLR = 1<<5;  /* or 0x20;		D0 <- 0 */
 16c:	e0 e4       	ldi	r30, 0x40	; 64
 16e:	f4 e0       	ldi	r31, 0x04	; 4
 170:	90 e2       	ldi	r25, 0x20	; 32
 172:	96 83       	std	Z+6, r25	; 0x06
			PORTC.OUTSET = 1<<4;  /* or 0x10;		D1 <- 1 */
 174:	90 e1       	ldi	r25, 0x10	; 16
 176:	95 83       	std	Z+5, r25	; 0x05
 178:	2a c0       	rjmp	.+84     	; 0x1ce <move_LEDS+0x7c>
		}
		else if (i == 2) {
 17a:	82 30       	cpi	r24, 0x02	; 2
 17c:	39 f4       	brne	.+14     	; 0x18c <move_LEDS+0x3a>
			PORTC.OUTCLR = 1<<4;  /* or 0x10;		D1 <- 0 */
 17e:	90 e1       	ldi	r25, 0x10	; 16
 180:	90 93 46 04 	sts	0x0446, r25	; 0x800446 <__TEXT_REGION_LENGTH__+0x7f4446>
			PORTA.OUTSET = 1<<0;  /* or 0x01;		D2 <- 1 */
 184:	91 e0       	ldi	r25, 0x01	; 1
 186:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
 18a:	21 c0       	rjmp	.+66     	; 0x1ce <move_LEDS+0x7c>
		}
		else if (i == 3) {
 18c:	83 30       	cpi	r24, 0x03	; 3
 18e:	39 f4       	brne	.+14     	; 0x19e <move_LEDS+0x4c>
			PORTA.OUTCLR = 1<<0;  /* or 0x01;		D2 <- 0 */
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	90 93 06 04 	sts	0x0406, r25	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
			PORTF.OUTSET = 1<<5;  /* or 0x20;		D3 <- 1 */
 196:	90 e2       	ldi	r25, 0x20	; 32
 198:	90 93 a5 04 	sts	0x04A5, r25	; 0x8004a5 <__TEXT_REGION_LENGTH__+0x7f44a5>
 19c:	18 c0       	rjmp	.+48     	; 0x1ce <move_LEDS+0x7c>
		}
		else if (i == 4) {
 19e:	84 30       	cpi	r24, 0x04	; 4
 1a0:	39 f4       	brne	.+14     	; 0x1b0 <move_LEDS+0x5e>
			PORTF.OUTCLR = 1<<5;  /* or 0x20;		D3 <- 0 */
 1a2:	90 e2       	ldi	r25, 0x20	; 32
 1a4:	90 93 a6 04 	sts	0x04A6, r25	; 0x8004a6 <__TEXT_REGION_LENGTH__+0x7f44a6>
			PORTC.OUTSET = 1<<6;  /* or 0x40;		D4 <- 1 */
 1a8:	90 e4       	ldi	r25, 0x40	; 64
 1aa:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
 1ae:	0f c0       	rjmp	.+30     	; 0x1ce <move_LEDS+0x7c>
		}
		else if (i == 5) {
 1b0:	85 30       	cpi	r24, 0x05	; 5
 1b2:	39 f4       	brne	.+14     	; 0x1c2 <move_LEDS+0x70>
			PORTC.OUTCLR = 1<<6;  /* or 0x40;		D4 <- 0 */
 1b4:	90 e4       	ldi	r25, 0x40	; 64
 1b6:	90 93 46 04 	sts	0x0446, r25	; 0x800446 <__TEXT_REGION_LENGTH__+0x7f4446>
			PORTB.OUTSET = 1<<2;  /* or 0x04;		D5 <- 1 */
 1ba:	94 e0       	ldi	r25, 0x04	; 4
 1bc:	90 93 25 04 	sts	0x0425, r25	; 0x800425 <__TEXT_REGION_LENGTH__+0x7f4425>
 1c0:	06 c0       	rjmp	.+12     	; 0x1ce <move_LEDS+0x7c>
		}
		else {
			PORTB.OUTCLR = 1<<2;  /* or 0x04;		D5 <- 0 */
 1c2:	94 e0       	ldi	r25, 0x04	; 4
 1c4:	90 93 26 04 	sts	0x0426, r25	; 0x800426 <__TEXT_REGION_LENGTH__+0x7f4426>
			PORTF.OUTSET = 1<<4;  /* or 0x10;		D6 <- 1 */
 1c8:	90 e1       	ldi	r25, 0x10	; 16
 1ca:	90 93 a5 04 	sts	0x04A5, r25	; 0x8004a5 <__TEXT_REGION_LENGTH__+0x7f44a5>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ce:	2f e3       	ldi	r18, 0x3F	; 63
 1d0:	32 e4       	ldi	r19, 0x42	; 66
 1d2:	9f e0       	ldi	r25, 0x0F	; 15
 1d4:	21 50       	subi	r18, 0x01	; 1
 1d6:	30 40       	sbci	r19, 0x00	; 0
 1d8:	90 40       	sbci	r25, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <move_LEDS+0x82>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <move_LEDS+0x8c>
 1de:	00 00       	nop

void move_LEDS(void)
{
	uint8_t i = 0;
	
	for (i=0; i < 7; i += 1)
 1e0:	8f 5f       	subi	r24, 0xFF	; 255
 1e2:	87 30       	cpi	r24, 0x07	; 7
 1e4:	08 f4       	brcc	.+2      	; 0x1e8 <move_LEDS+0x96>
 1e6:	b7 cf       	rjmp	.-146    	; 0x156 <move_LEDS+0x4>
 1e8:	87 e0       	ldi	r24, 0x07	; 7
 1ea:	46 c0       	rjmp	.+140    	; 0x278 <move_LEDS+0x126>
		
		_delay_us(DELAY_QTR_SEC);
	}
	for (i = 7; i > 0; i -= 1)
	{
		if (i == 7){
 1ec:	87 30       	cpi	r24, 0x07	; 7
 1ee:	39 f4       	brne	.+14     	; 0x1fe <move_LEDS+0xac>
			PORTF.OUTCLR = 1<<4;  /* or 0x10;		D6 <- 0 */
 1f0:	90 e1       	ldi	r25, 0x10	; 16
 1f2:	90 93 a6 04 	sts	0x04A6, r25	; 0x8004a6 <__TEXT_REGION_LENGTH__+0x7f44a6>
			PORTA.OUTSET = 1<<1;  /* or 0x02;		D7 <- 1 */
 1f6:	92 e0       	ldi	r25, 0x02	; 2
 1f8:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
 1fc:	33 c0       	rjmp	.+102    	; 0x264 <move_LEDS+0x112>
		}
		else if (i == 6) {
 1fe:	86 30       	cpi	r24, 0x06	; 6
 200:	39 f4       	brne	.+14     	; 0x210 <move_LEDS+0xbe>
			PORTA.OUTCLR = 1<<1;  /* or 0x02;		D7 <- 0 */
 202:	92 e0       	ldi	r25, 0x02	; 2
 204:	90 93 06 04 	sts	0x0406, r25	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
			PORTF.OUTSET = 1<<4;  /* or 0x10;		D6 <- 1 */
 208:	90 e1       	ldi	r25, 0x10	; 16
 20a:	90 93 a5 04 	sts	0x04A5, r25	; 0x8004a5 <__TEXT_REGION_LENGTH__+0x7f44a5>
 20e:	2a c0       	rjmp	.+84     	; 0x264 <move_LEDS+0x112>
		}
		else if (i == 5) {
 210:	85 30       	cpi	r24, 0x05	; 5
 212:	39 f4       	brne	.+14     	; 0x222 <move_LEDS+0xd0>
			PORTF.OUTCLR = 1<<4;  /* or 0x10;		D6 <- 0 */
 214:	90 e1       	ldi	r25, 0x10	; 16
 216:	90 93 a6 04 	sts	0x04A6, r25	; 0x8004a6 <__TEXT_REGION_LENGTH__+0x7f44a6>
			PORTB.OUTSET = 1<<2;  /* or 0x04;		D5 <- 1 */
 21a:	94 e0       	ldi	r25, 0x04	; 4
 21c:	90 93 25 04 	sts	0x0425, r25	; 0x800425 <__TEXT_REGION_LENGTH__+0x7f4425>
 220:	21 c0       	rjmp	.+66     	; 0x264 <move_LEDS+0x112>
		}
		else if (i == 4) {
 222:	84 30       	cpi	r24, 0x04	; 4
 224:	39 f4       	brne	.+14     	; 0x234 <move_LEDS+0xe2>
			PORTB.OUTCLR = 1<<2;  /* or 0x04;		D5 <- 0 */
 226:	94 e0       	ldi	r25, 0x04	; 4
 228:	90 93 26 04 	sts	0x0426, r25	; 0x800426 <__TEXT_REGION_LENGTH__+0x7f4426>
			PORTC.OUTSET = 1<<6;  /* or 0x40;		D4 <- 1 */
 22c:	90 e4       	ldi	r25, 0x40	; 64
 22e:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
 232:	18 c0       	rjmp	.+48     	; 0x264 <move_LEDS+0x112>
		}
		else if (i == 3) {
 234:	83 30       	cpi	r24, 0x03	; 3
 236:	39 f4       	brne	.+14     	; 0x246 <move_LEDS+0xf4>
			PORTC.OUTCLR = 1<<6;  /* or 0x40;		D4 <- 0 */
 238:	90 e4       	ldi	r25, 0x40	; 64
 23a:	90 93 46 04 	sts	0x0446, r25	; 0x800446 <__TEXT_REGION_LENGTH__+0x7f4446>
			PORTF.OUTSET = 1<<5;  /* or 0x20;		D3 <- 1 */
 23e:	90 e2       	ldi	r25, 0x20	; 32
 240:	90 93 a5 04 	sts	0x04A5, r25	; 0x8004a5 <__TEXT_REGION_LENGTH__+0x7f44a5>
 244:	0f c0       	rjmp	.+30     	; 0x264 <move_LEDS+0x112>
		}
		else if (i == 2) {
 246:	82 30       	cpi	r24, 0x02	; 2
 248:	39 f4       	brne	.+14     	; 0x258 <move_LEDS+0x106>
			PORTF.OUTCLR = 1<<5;  /* or 0x20;		D3 <- 0 */
 24a:	90 e2       	ldi	r25, 0x20	; 32
 24c:	90 93 a6 04 	sts	0x04A6, r25	; 0x8004a6 <__TEXT_REGION_LENGTH__+0x7f44a6>
			PORTA.OUTSET = 1<<0;  /* or 0x01;		D2 <- 1 */
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <__TEXT_REGION_LENGTH__+0x7f4405>
 256:	06 c0       	rjmp	.+12     	; 0x264 <move_LEDS+0x112>
		}
		else {
			PORTA.OUTCLR = 1<<0;  /* or 0x01;		D2 <- 0 */
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	90 93 06 04 	sts	0x0406, r25	; 0x800406 <__TEXT_REGION_LENGTH__+0x7f4406>
			PORTC.OUTSET = 1<<4;  /* or 0x10;		D1 <- 1 */
 25e:	90 e1       	ldi	r25, 0x10	; 16
 260:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <__TEXT_REGION_LENGTH__+0x7f4445>
 264:	2f e3       	ldi	r18, 0x3F	; 63
 266:	32 e4       	ldi	r19, 0x42	; 66
 268:	9f e0       	ldi	r25, 0x0F	; 15
 26a:	21 50       	subi	r18, 0x01	; 1
 26c:	30 40       	sbci	r19, 0x00	; 0
 26e:	90 40       	sbci	r25, 0x00	; 0
 270:	e1 f7       	brne	.-8      	; 0x26a <move_LEDS+0x118>
 272:	00 c0       	rjmp	.+0      	; 0x274 <move_LEDS+0x122>
 274:	00 00       	nop
			PORTF.OUTSET = 1<<4;  /* or 0x10;		D6 <- 1 */
		}
		
		_delay_us(DELAY_QTR_SEC);
	}
	for (i = 7; i > 0; i -= 1)
 276:	81 50       	subi	r24, 0x01	; 1
 278:	81 11       	cpse	r24, r1
 27a:	b8 cf       	rjmp	.-144    	; 0x1ec <move_LEDS+0x9a>
			PORTC.OUTSET = 1<<4;  /* or 0x10;		D1 <- 1 */
		}
		
		_delay_us(DELAY_QTR_SEC);
	}
 27c:	08 95       	ret

0000027e <main>:
}


int main(void)
{
    CLOCK_init();
 27e:	0e 94 5c 00 	call	0xb8	; 0xb8 <CLOCK_init>
    
    /* set UNO D0-D7 to all outputs  */
	PORTS_init();
 282:	0e 94 62 00 	call	0xc4	; 0xc4 <PORTS_init>
	
	SetPorts();
 286:	0e 94 8c 00 	call	0x118	; 0x118 <SetPorts>
 28a:	2f ef       	ldi	r18, 0xFF	; 255
 28c:	88 e0       	ldi	r24, 0x08	; 8
 28e:	9d e3       	ldi	r25, 0x3D	; 61
 290:	21 50       	subi	r18, 0x01	; 1
 292:	80 40       	sbci	r24, 0x00	; 0
 294:	90 40       	sbci	r25, 0x00	; 0
 296:	e1 f7       	brne	.-8      	; 0x290 <main+0x12>
 298:	00 c0       	rjmp	.+0      	; 0x29a <main+0x1c>
 29a:	00 00       	nop
	_delay_us(DELAY_ONE_SEC);
	
	ClearPorts();
 29c:	0e 94 6f 00 	call	0xde	; 0xde <ClearPorts>
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	88 e0       	ldi	r24, 0x08	; 8
 2a4:	9d e3       	ldi	r25, 0x3D	; 61
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0x28>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x32>
 2b0:	00 00       	nop
	
	_delay_us(DELAY_ONE_SEC);
	
	while(1)
	{
		move_LEDS();
 2b2:	0e 94 a9 00 	call	0x152	; 0x152 <move_LEDS>
 2b6:	fd cf       	rjmp	.-6      	; 0x2b2 <main+0x34>

000002b8 <ccp_write_io>:
 2b8:	dc 01       	movw	r26, r24
 2ba:	28 ed       	ldi	r18, 0xD8	; 216
 2bc:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x7f4034>
 2c0:	6c 93       	st	X, r22
 2c2:	08 95       	ret

000002c4 <_exit>:
 2c4:	f8 94       	cli

000002c6 <__stop_program>:
 2c6:	ff cf       	rjmp	.-2      	; 0x2c6 <__stop_program>
